services:
  # frontend:
  #   build:
  #     context: ../life-calendar-frontend
  #     dockerfile: ./Dockerfile
  #   container_name: life-calendar-frontend
  #   restart: always
  #   ports:
  #     - "${FRONTEND_HOST_PORT}:${FRONTEND_CONTAINER_PORT}"

  auth-server:
    build:
      context: ../auth-service
      dockerfile: ./build/auth/Dockerfile
    container_name: life-calendar-auth-server
    restart: always
    environment:
      - ENV=${ENV}
      - PORT=${AUTH_SERVER_CONTAINER_PORT}
      - AUTH0_BASE_URL=${AUTH0_BASE_URL}
      - AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}
      - AUTH0_CLIENT_SECRET=${AUTH0_CLIENT_SECRET}
      - AUTH0_AUDIENCE=${AUTH0_AUDIENCE}
    ports:
      - "${AUTH_SERVER_HOST_PORT}:${AUTH_SERVER_CONTAINER_PORT}"
    healthcheck:
      test: ["CMD", "grpc_health_probe", "-addr=localhost:${AUTH_SERVER_CONTAINER_PORT}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  user-server:
    build:
      context: ../user-service
      dockerfile: ./build/user/Dockerfile
    container_name: life-calendar-user-server
    restart: always
    environment:
      - ENV=${ENV}
      - PORT=${USER_SERVER_CONTAINER_PORT}
      - DB_HOST=${USER_DB_HOST}
      - DB_USER=${USER_DB_USER}
      - DB_PASSWORD=${USER_DB_PASSWORD}
      - DB_NAME=${USER_DB_NAME}
      - DB_PORT=${USER_DB_CONTAINER_PORT}
      - DB_SSL_MODE=${USER_DB_SSL_MODE}
      - AUTH_SERVICE_HOST=${AUTH_SERVER_HOST}
      - AUTH_SERVICE_PORT=${AUTH_SERVER_CONTAINER_PORT}
    depends_on:
      user-db:
        condition: service_healthy
    ports:
      - "${USER_SERVER_HOST_PORT}:${USER_SERVER_CONTAINER_PORT}"
    healthcheck:
      test: ["CMD", "grpc_health_probe", "-addr=localhost:${USER_SERVER_CONTAINER_PORT}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  event-server:
    build:
      context: ../event-service
      dockerfile: ./build/event/Dockerfile
    container_name: life-calendar-event-server
    restart: always
    environment:
      - ENV=${ENV}
      - PORT=${EVENT_SERVER_CONTAINER_PORT}
      - DB_HOST=${EVENT_DB_HOST}
      - DB_USER=${EVENT_DB_USER}
      - DB_PASSWORD=${EVENT_DB_PASSWORD}
      - DB_NAME=${EVENT_DB_NAME}
      - DB_PORT=${EVENT_DB_CONTAINER_PORT}
      - DB_SSL_MODE=${EVENT_DB_SSL_MODE}
      - USER_SERVICE_HOST=${USER_SERVER_HOST}
      - USER_SERVICE_PORT=${USER_SERVER_CONTAINER_PORT}
    depends_on:
      event-db:
        condition: service_healthy
    ports:
      - "${EVENT_SERVER_HOST_PORT}:${EVENT_SERVER_CONTAINER_PORT}"
    healthcheck:
      test: ["CMD", "grpc_health_probe", "-addr=localhost:${EVENT_SERVER_CONTAINER_PORT}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  user-db:
    image: postgres:17
    container_name: life-calendar-user-db
    restart: always
    environment:
      POSTGRES_DB: ${USER_DB_NAME}
      POSTGRES_USER: ${USER_DB_USER}
      POSTGRES_PASSWORD: ${USER_DB_PASSWORD}
    ports:
      - "${USER_DB_HOST_PORT}:${USER_DB_CONTAINER_PORT}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${USER_DB_USER}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    volumes:
      - life-calendar-user-db-data:/var/lib/postgresql/data

  event-db:
    image: postgres:17
    container_name: life-calendar-event-db
    restart: always
    environment:
      POSTGRES_DB: ${EVENT_DB_NAME}
      POSTGRES_USER: ${EVENT_DB_USER}
      POSTGRES_PASSWORD: ${EVENT_DB_PASSWORD}
    ports:
      - "${EVENT_DB_HOST_PORT}:${EVENT_DB_CONTAINER_PORT}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${EVENT_DB_USER}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    volumes:
      - life-calendar-event-db-data:/var/lib/postgresql/data

  auth-grpc-gateway:
    build:
      context: ../auth-service
      dockerfile: ./build/gateway/Dockerfile
    container_name: life-calendar-auth-grpc-gateway
    restart: always
    environment:
      - ENV=${ENV}
      - PORT=${AUTH_GRPC_GATEWAY_CONTAINER_PORT}
      - SERVER_HOST=${AUTH_SERVER_HOST}
      - SERVER_PORT=${AUTH_SERVER_CONTAINER_PORT}
    ports:
      - "${AUTH_GRPC_GATEWAY_HOST_PORT}:${AUTH_GRPC_GATEWAY_CONTAINER_PORT}"

  user-grpc-gateway:
    build:
      context: ../user-service
      dockerfile: ./build/gateway/Dockerfile
    container_name: life-calendar-user-grpc-gateway
    restart: always
    environment:
      - ENV=${ENV}
      - PORT=${USER_GRPC_GATEWAY_CONTAINER_PORT}
      - SERVER_HOST=${USER_SERVER_HOST}
      - SERVER_PORT=${USER_SERVER_CONTAINER_PORT}
    ports:
      - "${USER_GRPC_GATEWAY_HOST_PORT}:${USER_GRPC_GATEWAY_CONTAINER_PORT}"

  event-grpc-gateway:
    build:
      context: ../event-service
      dockerfile: ./build/gateway/Dockerfile
    container_name: life-calendar-event-grpc-gateway
    restart: always
    environment:
      - ENV=${ENV}
      - PORT=${EVENT_GRPC_GATEWAY_CONTAINER_PORT}
      - SERVER_HOST=${EVENT_SERVER_HOST}
      - SERVER_PORT=${EVENT_SERVER_CONTAINER_PORT}
    ports:
      - "${EVENT_GRPC_GATEWAY_HOST_PORT}:${EVENT_GRPC_GATEWAY_CONTAINER_PORT}"

volumes:
  life-calendar-user-db-data:
  life-calendar-event-db-data: